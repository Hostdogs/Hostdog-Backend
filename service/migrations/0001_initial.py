# Generated by Django 3.2 on 2021-04-24 14:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HostService',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='hostservice_host', serialize=False, to='accounts.host')),
                ('price_dog_walk', models.FloatField(default=0.0)),
                ('price_get_dog', models.FloatField(default=0.0)),
                ('price_deliver_dog', models.FloatField(default=0.0)),
                ('price_bath_dog', models.FloatField(default=0.0)),
                ('enable_dog_walk', models.BooleanField(default=True)),
                ('enable_get_dog', models.BooleanField(default=True)),
                ('enable_delivery_dog', models.BooleanField(default=True)),
                ('enable_bath_dog', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(max_length=50)),
                ('meal_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_status', models.CharField(choices=[('time_of_service', 'Time of service'), ('à¹‰host_is_waiting_to_receive_your_dog', 'Host is waiting to receive your dog'), ('caring_for_your_dog', 'Caring for your dog'), ('come_and_get_your_dog', 'Come and get your dog'), ('service_success', 'Service success')], max_length=40)),
                ('service_is_over_night', models.BooleanField(default=False)),
                ('service_create_time', models.DateTimeField(auto_now_add=True)),
                ('service_start_time', models.DateField()),
                ('service_end_time', models.DateField()),
                ('service_send_time', models.DateTimeField(blank=True, null=True)),
                ('service_get_time', models.DateTimeField(blank=True, null=True)),
                ('service_meal_per_day', models.IntegerField()),
                ('service_meal_weight', models.IntegerField()),
                ('is_dog_walk', models.BooleanField(default=False)),
                ('is_get_dog', models.BooleanField(default=False)),
                ('is_delivery_dog', models.BooleanField(default=False)),
                ('is_bath_dog', models.BooleanField(default=False)),
                ('service_bio', models.TextField(default='', max_length=255)),
                ('main_status', models.CharField(choices=[('pending', 'Pending'), ('payment', 'Payment'), ('end', 'End'), ('in_progress', 'In progress'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('additional_service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='additional_service', to='service.hostservice')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_customer', to='accounts.customer')),
                ('dog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_dog', to='accounts.dog')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_host', to='accounts.host')),
                ('service_meal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_service_meal_type', to='service.meal')),
            ],
        ),
        migrations.AddField(
            model_name='hostservice',
            name='available_meals',
            field=models.ManyToManyField(related_name='available_meals', to='service.Meal'),
        ),
    ]
